name: Build Package

on:
  workflow_call:

env:
  APP_NAME: nipaw

jobs:
  build_windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x86_64-pc-windows-msvc
            label: windows-x86_64

    steps:
      - name: 检出仓库
        uses: actions/checkout@v4

      - name: 设置 rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: 设置 rust 缓存
        uses: swatinem/rust-cache@v2
        with:
          prefix-key: ${{ env.APP_NAME }}

      - name: 配置 pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: 构建
        run: |
          pnpm install
          pnpm build --target ${{ matrix.platform.target }}
        working-directory: nipaw_node

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.APP_NAME }}-node-${{ matrix.platform.label }}"
          path: |
            nipaw_node/dist/${{ env.APP_NAME }}*.node

  build_macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-latest-large
            target: x86_64-apple-darwin
            label: macos-x86_64
          - runner: macos-latest
            target: aarch64-apple-darwin
            label: macos-aarch64

    steps:
      - name: 检出仓库
        uses: actions/checkout@v4

      - name: 设置 rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: 设置 rust 缓存
        uses: swatinem/rust-cache@v2
        with:
          prefix-key: ${{ env.APP_NAME }}

      - name: 配置 pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: 构建
        run: |
          pnpm install
          pnpm build --target ${{ matrix.platform.target }}
        working-directory: nipaw_node

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.APP_NAME }}-node-${{ matrix.platform.label }}"
          path: |
            nipaw_node/dist/${{ env.APP_NAME }}*.node

  build_linux:
    runs-on: ${{ matrix.platform.runner }}
    container: ${{ matrix.platform.container }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            label: linux-x86_64
          - runner: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu
            label: linux-aarch64

    steps:
      - name: 检出仓库
        uses: actions/checkout@v4

      - name: 设置 rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: 设置 rust 缓存
        uses: swatinem/rust-cache@v2
        with:
          prefix-key: ${{ env.APP_NAME }}

      - name: 配置 pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: 构建
        run: |
          pnpm install
          pnpm build --target ${{ matrix.platform.target }}
        working-directory: nipaw_node

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.APP_NAME }}-node-${{ matrix.platform.label }}"
          path: |
            nipaw_node/dist/${{ env.APP_NAME }}*.node


      - name: 上传npm包
        if: matrix.platform.label == 'linux-x86_64'
        uses: actions/upload-artifact@v4
        with:
          name: "npm-package"
          path: |
            nipaw_node/dist/index.js
            nipaw_node/dist/index.d.ts
            nipaw_node/package.json